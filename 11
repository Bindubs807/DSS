#include<stdio.h>

#include<stdlib.h>

int G[10][10],src,visit[10],n;

void Graph_read()
{
    int i,j;
    printf("Enter the number of vertices in the graph:"); 
    scanf("%d", &n); 
    printf("Enter the Graph as Adjacency Matrix:\n"); 
    for(i=1; i<=n; i++)
        for ( j = 1; j<=n; j++) 
            scanf("%d",&G[1][j]);
}
void bfs(int src,int visit[10])
{
    int f=0,r=0,q[10],u,v,i;
    q[r]=src;
    visit[src] = 1;
    while (f<=r)
    {
        u= q[f++];
        for (v = 1; v <= n; v++)
        {
        if (G[u][v] == 1 && visit[v] == 0)
        {
            visit[v] = 1;
            q[++r]=v;
        }
        }
    }
    }
void dfs(int src) 
{
    int i;
    visit[src]=1; 
    for ( i = 1 ;i<=n; i++)
    {
        if(visit[i]==0 && G[src][i]==1)
           dfs(i);
    }
}
void isconnected (int flag)
{
    if (flag==1)
    printf ("Graph is not connected\n");
    else
    printf("Graph is connected\n");
}

void main()
{
    int i,j,src,ch, flag; 
    while(1) 
    {
        printf("\n-- -Graph Menu---");
        printf("\n1.Create Graph of Matrix\t2.Depth First Search\t");
        printf("\t3.Breadth First Search\t4.Exit"); 
        printf("\n\nEnter your Choice:");
        scanf("%d", &ch);
        switch(ch)
        {
        case 1:
            Graph_read();
            break;
        case 2:
        printf("enter the source vertex:");
        scanf("%d",&src);
        for(i=1;i<=n;i++)
            visit[i]=0;
        bfs(src,visit);
        flag=0;
        for(i=1;i<=n;i++)
        {
            if(visit[i]==0)
            {
                printf("node %d is not reachable..\n",i);
                flag=1;
            }
            else
                printf("node %d is reachable....\n",i);
        }
        isconnected(flag);
        break;

        case 3: for(i=1; i<=n; i++) 
                    visit [i]=0;
                printf("Enter the source vertex:"); 
                scanf("%d", &src); 
                dfs(src); 
                flag=0;
                for(i=1; i<=n; i++){
                if (visit[i]==0){
                    printf ("Node %d is not reachable...\n",i);
                    flag=1;
                }
                    else
                        printf ("Node %d is reachable...\n", i);
                }
                    isconnected (flag);
                    break;

        case 4:exit(0);}
    }
}


                    
